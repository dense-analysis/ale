Before:
  call ale#assert#SetUpFixerTest('python', 'ruff_format')

  let b:bin_dir = has('win32') ? 'Scripts' : 'bin'

After:
  call ale#assert#TearDownFixerTest()

  unlet! g:dir
  unlet! b:bin_dir

Execute(The ruff format callback should return the correct default values):
  let file_path = g:dir . '/../test-files/python/with_virtualenv/subdir/foo/bar.py'

  silent execute 'file ' . fnameescape(file_path)

  let fname = ale#Escape(ale#path#Simplify(file_path))
  AssertFixer
  \ {
  \   'cwd': ale#path#Simplify(g:dir . '/../test-files/python/with_virtualenv/subdir'),
  \   'command': ale#Escape(ale#path#Simplify(g:dir . '/../test-files/python/with_virtualenv/env/' . b:bin_dir . '/ruff')) . ' format -',
  \ }

Execute(The ruff format callback should not change directory if the option is set to 0):
  let g:ale_python_ruff_change_directory = 0

  let file_path = g:dir . '/../test-files/python/with_virtualenv/subdir/foo/bar.py'

  silent execute 'file ' . fnameescape(file_path)

  let fname = ale#Escape(ale#path#Simplify(file_path))

  AssertFixer
  \ {
  \   'cwd': '%s:h',
  \   'command': ale#Escape(ale#path#Simplify(g:dir . '/../test-files/python/with_virtualenv/env/' . b:bin_dir . '/ruff')) . ' format -',
  \ }

Execute(The ruff format callback should respect custom options):
  let g:ale_python_ruff_format_options = '--isolated --respect-gitignore'

  let file_path = g:dir . '/../test-files/python/with_virtualenv/subdir/foo/bar.py'

  silent execute 'file ' . fnameescape(file_path)

  let fname = ale#Escape(ale#path#Simplify(file_path))

  AssertFixer
  \ {
  \   'cwd': ale#path#Simplify(g:dir . '/../test-files/python/with_virtualenv/subdir'),
  \   'command': ale#Escape(ale#path#Simplify(g:dir . '/../test-files/python/with_virtualenv/env/' . b:bin_dir . '/ruff'))
  \     . ' format --isolated --respect-gitignore -',
  \ }
