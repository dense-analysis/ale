Before:
  Save g:ale_python_autoimport_executable
  Save g:ale_python_autoimport_options

  " Use an invalid global executable, so we don't match it.
  let g:ale_python_autoimport_executable = 'xxxinvalid'
  let g:ale_python_autoimport_options = ''

  call ale#test#SetDirectory('/testplugin/test/fixers')

  let b:bin_dir = has('win32') ? 'Scripts' : 'bin'

After:
  Restore

  unlet! b:bin_dir

  call ale#test#RestoreDirectory()

Execute(The autoimport callback should return the correct default values):
  silent execute 'file ' . fnameescape(g:dir . '/../test-files/python/with_virtualenv/subdir/foo/bar.py')

  AssertEqual
  \ {
  \   'cwd': '%s:h',
  \   'command': ale#Escape(ale#path#Simplify(g:dir . '/../test-files/python/with_virtualenv/env/' . b:bin_dir . '/autoimport')) . ' -',
  \ },
  \ ale#fixers#autoimport#Fix(bufnr(''))

Execute(The autoimport callback should respect custom options):
  let g:ale_python_autoimport_options = '--multi-line=3 --trailing-comma'

  silent execute 'file ' . fnameescape(g:dir . '/../test-files/python/with_virtualenv/subdir/foo/bar.py')

  AssertEqual
  \ {
  \   'cwd': '%s:h',
  \   'command': ale#Escape(ale#path#Simplify(g:dir . '/../test-files/python/with_virtualenv/env/' . b:bin_dir . '/autoimport'))
  \     . ' --multi-line=3 --trailing-comma -',
  \ },
  \ ale#fixers#autoimport#Fix(bufnr(''))

Execute(pipenv is detected when python_autoimport_auto_pipenv is set):
  let g:ale_python_autoimport_auto_pipenv = 1

  call ale#test#SetFilename('../test-files/python/pipenv/whatever.py')

  AssertEqual
  \ {
  \   'cwd': '%s:h',
  \   'command': ale#Escape('pipenv') . ' run autoimport -',
  \ },
  \ ale#fixers#autoimport#Fix(bufnr(''))

Execute(Poetry is detected when python_autoimport_auto_poetry is set):
  let g:ale_python_autoimport_auto_poetry = 1

  call ale#test#SetFilename('../test-files/python/poetry/whatever.py')

  AssertEqual
  \ {
  \   'cwd': '%s:h',
  \   'command': ale#Escape('poetry') . ' run autoimport -',
  \ },
  \ ale#fixers#autoimport#Fix(bufnr(''))

Execute(uv is detected when python_autoimport_auto_uv is set):
  let g:ale_python_autoimport_auto_uv = 1

  call ale#test#SetFilename('../test-files/python/uv/whatever.py')

  AssertEqual
  \ {
  \   'cwd': '%s:h',
  \   'command': ale#Escape('uv') . ' run autoimport -',
  \ },
  \ ale#fixers#autoimport#Fix(bufnr(''))
