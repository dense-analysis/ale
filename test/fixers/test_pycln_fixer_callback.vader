Before:
  call ale#assert#SetUpFixerTest('python', 'pycln')

  let b:bin_dir = has('win32') ? 'Scripts' : 'bin'

  let b:cmd_tail = ' --silence'
After:
  call ale#assert#TearDownFixerTest()

  unlet! g:dir
  unlet! b:bin_dir

Execute(The pycln callback should return the correct default values):
  let file_path = g:dir . '/../test-files/python/with_virtualenv/subdir/foo/bar.py'

  silent execute 'file ' . fnameescape(file_path)

  GivenCommandOutput ['pycln, version 1.3.0']
  AssertFixer
  \ {
  \   'cwd': ale#path#Simplify(g:dir . '/../test-files/python/with_virtualenv/subdir'),
  \   'command': ale#Escape(ale#path#Simplify(g:dir . '/../test-files/python/with_virtualenv/env/' . b:bin_dir . '/pycln')) . b:cmd_tail . ' -',
  \ }

Execute(The pycln callback should not use stdin for older versions (< 1.3.0)):
  let file_path = g:dir . '/../test-files/python/with_virtualenv/subdir/foo/bar.py'

  silent execute 'file ' . fnameescape(file_path)

  GivenCommandOutput ['pycln, version 1.2.99']
  AssertFixer
  \ {
  \   'cwd': ale#path#Simplify(g:dir . '/../test-files/python/with_virtualenv/subdir'),
  \   'command': ale#Escape(ale#path#Simplify(g:dir . '/../test-files/python/with_virtualenv/env/' . b:bin_dir . '/pycln')) . b:cmd_tail . ' %s',
  \ }

Execute(The pycln callback should not change directory if the option is set to 0):
  let g:ale_python_pycln_change_directory = 0

  let file_path = g:dir . '/../test-files/python/with_virtualenv/subdir/foo/bar.py'

  silent execute 'file ' . fnameescape(file_path)

  let fname = ale#Escape(ale#path#Simplify(file_path))

  GivenCommandOutput ['pycln, version 1.3.0']
  AssertFixer
  \ {
  \   'cwd': '%s:h',
  \   'command': ale#Escape(ale#path#Simplify(g:dir . '/../test-files/python/with_virtualenv/env/' . b:bin_dir . '/pycln')) . b:cmd_tail . ' -',
  \ }

Execute(The pycln callback should respect custom options):
  let g:ale_python_pycln_options = '--expand-stars --no-gitignore'

  let file_path = g:dir . '/../test-files/python/with_virtualenv/subdir/foo/bar.py'

  silent execute 'file ' . fnameescape(file_path)

  GivenCommandOutput ['pycln, version 1.3.0']
  AssertFixer
  \ {
  \   'cwd': ale#path#Simplify(g:dir . '/../test-files/python/with_virtualenv/subdir'),
  \   'command': ale#Escape(ale#path#Simplify(g:dir . '/../test-files/python/with_virtualenv/env/' . b:bin_dir . '/pycln'))
  \     . ' --expand-stars --no-gitignore'  . b:cmd_tail . ' -',
  \ }

Execute(Pipenv is detected when python_pycln_auto_pipenv is set):
  let g:ale_python_pycln_auto_pipenv = 1
  let g:ale_python_pycln_change_directory = 0

  let file_path = '../test-files/python/pipenv/whatever.py'

  call ale#test#SetFilename(file_path)

  GivenCommandOutput ['pycln, version 1.3.0']
  AssertFixer
  \ {
  \   'cwd': '%s:h',
  \   'command': ale#Escape('pipenv') . ' run pycln' . b:cmd_tail . ' -'
  \ }

Execute(Poetry is detected when python_pycln_auto_poetry is set):
  let g:ale_python_pycln_auto_poetry = 1
  let g:ale_python_pycln_change_directory = 0

  call ale#test#SetFilename('../test-files/python/poetry/whatever.py')

  GivenCommandOutput ['pycln, version 1.3.0']
  AssertFixer
  \ {
  \   'cwd': '%s:h',
  \   'command': ale#Escape('poetry') . ' run pycln' . b:cmd_tail . ' -'
  \ }

Execute(Poetry is detected when python_pycln_auto_poetry is set, and cwd respects change_directory option):
  let g:ale_python_pycln_auto_poetry = 1
  let g:ale_python_pycln_change_directory = 1

  call ale#test#SetFilename('../test-files/python/poetry/whatever.py')

  GivenCommandOutput ['pycln, version 1.3.0']
  AssertFixer
  \ {
  \   'cwd': ale#path#Simplify(g:dir . '/../test-files/python/poetry'),
  \   'command': ale#Escape('poetry') . ' run pycln' . b:cmd_tail . ' -'
  \ }

Execute(configuration files set in _config should be supported):
  let g:ale_python_pycln_change_directory = 0
  let g:ale_python_pycln_config_file = ale#path#Simplify(g:dir . '/../test-files/pycln/other_config.xml')

  GivenCommandOutput ['pycln, version 1.3.0']
  AssertFixer
  \ {
  \   'cwd': '%s:h',
  \   'command': ale#Escape('pycln')
  \     . ' --config ' . ale#Escape(ale#path#Simplify(g:dir . '/../test-files/pycln/other_config.xml'))
  \     . b:cmd_tail . ' -'
  \ }

Execute(configuration file set in _options overrides _config):
  let g:ale_python_pycln_change_directory = 0
  let g:ale_python_pycln_config_file = '/foo.xml'
  let g:ale_python_pycln_options = '--config /bar.xml'

  GivenCommandOutput ['pycln, version 1.3.0']
  AssertFixer
  \ {
  \   'cwd': '%s:h',
  \   'command': ale#Escape('pycln') . ' --config /bar.xml' . b:cmd_tail . ' -'
  \ }

  let b:ale_python_pycln_options = '-x --config /bar.xml'

  AssertFixer
  \ {
  \   'cwd': '%s:h',
  \   'command': ale#Escape('pycln') . ' -x --config /bar.xml' . b:cmd_tail . ' -'
  \ }

