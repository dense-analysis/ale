Before:
  runtime ale_linters/d/dmd.vim

After:
  call ale#linter#Reset()

Execute(Basic errors should be handled by dmd):
  call ale#test#SetFilename('some/path/test.d')

  AssertEqual
  \ [
  \   {
  \     'lnum': '5',
  \     'col' : '8',
  \     'type': 'E',
  \     'text': 'module weak_reference is in file ''dstruct/weak_reference.d'' which cannot be read'
  \   },
  \   {
  \     'lnum': '20',
  \     'col' : '10',
  \     'type': 'W',
  \     'text': 'function test.thisoldfunc is deprecated'
  \   },
  \   {
  \     'lnum': '230',
  \     'col' : '9',
  \     'type': 'W',
  \     'text': 'statement is not reachable'
  \   }
  \ ],
  \ ale_linters#d#dmd#Handle(bufnr(''), [
  \ 'some/path/test.d(5,8): Error: module weak_reference is in file ''dstruct/weak_reference.d'' which cannot be read',
  \ 'import path[0] = source',
  \ 'import path[1] = /usr/include/dlang/dmd',
  \ 'some/path/test.d(20,10): Deprecation: function test.thisoldfunc is deprecated',
  \ 'some/path/test.d(230,9): Warning: statement is not reachable',
  \ ])

Execute(Problem from other files should be ignored by dmd):
  call ale#test#SetFilename('some/path/test.d')

  AssertEqual
  \ [],
  \ ale_linters#d#dmd#Handle(bufnr(''), [
  \ 'some/path/foo.d(5,8): Error: module weak_reference is in file ''dstruct/weak_reference.d'' which cannot be read',
  \ 'import path[0] = source',
  \ 'import path[1] = /usr/include/dlang/dmd',
  \ ])
