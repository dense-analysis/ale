Before:
  call ale#test#SetDirectory('/testplugin/test')

  runtime ale_linters/php/phpstan.vim

After:
  Restore

  call ale#test#RestoreDirectory()
  call ale#linter#Reset()

Execute(Output without errors should be parsed correctly):
  call ale#test#SetFilename('phpstan-test-files/foo/test.php')

  AssertEqual
  \ [],
  \ ale_linters#php#phpstan#Handle(bufnr(''), [])

Execute(Output with some errors should be parsed correctly):
  call ale#test#SetFilename('phpstan-test-files/foo/test.php')

  AssertEqual
  \ [
  \   {
  \     'lnum': 9,
  \     'text': 'Call to method format() on an unknown class DateTimeImutable.',
  \     'type': 'E'
  \   },
  \   {
  \     'lnum': 16,
  \     'text': 'Sample message.',
  \     'type': 'E'
  \   },
  \   {
  \     'lnum': 192,
  \     'text': 'Invalid command testCommand.',
  \     'type': 'E'
  \   }
  \ ],
  \ ale_linters#php#phpstan#Handle(bufnr(''), [
  \   'phpstan-test-files/foo/test.php:9:Call to method format() on an unknown class DateTimeImutable.',
  \   'phpstan-test-files/foo/test.php:16:Sample message.',
  \   'phpstan-test-files/foo/test.php:192:Invalid command testCommand.',
  \])

Execute(Output should be parsed correctly with Windows paths):
  call ale#test#SetFilename('phpstan-test-files/foo/test.php')

  AssertEqual
  \ [
  \   {
  \     'lnum': 9,
  \     'text': 'Access to an undefined property Test::$var.',
  \     'type': 'E'
  \   }
  \ ],
  \ ale_linters#php#phpstan#Handle(bufnr(''), [
  \   'D:\phpstan-test-files\foo\test.php:9:Access to an undefined property Test::$var.',
  \])

Execute(Output for .inc files should be parsed correctly):
  call ale#test#SetFilename('phpstan-test-files/test.inc')

  AssertEqual
  \ [
  \   {
  \     'lnum': 9,
  \     'text': 'Access to an undefined property Test::$var.',
  \     'type': 'E'
  \   }
  \ ],
  \ ale_linters#php#phpstan#Handle(bufnr(''), [
  \   '/phpstan-test-files/foo/test.inc:9:Access to an undefined property Test::$var.',
  \])
