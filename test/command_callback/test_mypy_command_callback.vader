Before:
  call ale#assert#SetUpLinterTest('python', 'mypy')
  call ale#test#SetFilename('test.py')

  let b:bin_dir = has('win32') ? 'Scripts' : 'bin'

After:
  unlet! b:bin_dir
  unlet! b:executable

  call ale#assert#TearDownLinterTest()

Execute(The mypy callbacks should return the correct default values):
  AssertLinter 'mypy',
  \ ale#path#CdString(g:dir) . ale#Escape('mypy')
  \   . ' --show-column-numbers  '
  \   . '--shadow-file %s %t %s'

Execute(The mypy executable should be configurable, and escaped properly):
  let g:ale_python_mypy_executable = 'executable with spaces'

  AssertLinter 'executable with spaces',
  \ ale#path#CdString(g:dir) . ale#Escape('executable with spaces')
  \   . ' --show-column-numbers  '
  \   . '--shadow-file %s %t %s'

Execute(The mypy command callback should let you set options):
  let g:ale_python_mypy_options = '--some-option'

  AssertLinter 'mypy',
  \ ale#path#CdString(g:dir) . ale#Escape('mypy')
  \   . ' --show-column-numbers --some-option '
  \   . '--shadow-file %s %t %s'

Execute(The mypy command should switch directories to the detected project root):
  silent execute 'file ' . fnameescape(g:dir . '/python_paths/no_virtualenv/subdir/foo/bar.py')

  AssertLinter 'mypy',
  \ ale#path#CdString(ale#path#Simplify(g:dir . '/python_paths/no_virtualenv/subdir'))
  \   . ale#Escape('mypy')
  \   . ' --show-column-numbers  '
  \   . '--shadow-file %s %t %s'

Execute(The mypy callbacks should detect virtualenv directories and switch to the project root):
  silent execute 'file ' . fnameescape(g:dir . '/python_paths/with_virtualenv/subdir/foo/bar.py')

  let b:executable = ale#path#Simplify(g:dir . '/python_paths/with_virtualenv/env/' . b:bin_dir . '/mypy')

  AssertLinter b:executable,
  \   ale#path#CdString(ale#path#Simplify(g:dir . '/python_paths/with_virtualenv/subdir'))
  \   . ale#Escape(b:executable)
  \   . ' --show-column-numbers  '
  \   . '--shadow-file %s %t %s'

Execute(You should able able to use the global mypy instead):
  silent execute 'file ' . fnameescape(g:dir . '/python_paths/with_virtualenv/subdir/foo/bar.py')
  let g:ale_python_mypy_use_global = 1

  AssertLinter 'mypy',
  \   ale#path#CdString(ale#path#Simplify(g:dir . '/python_paths/with_virtualenv/subdir'))
  \   . ale#Escape('mypy')
  \   . ' --show-column-numbers  '
  \   . '--shadow-file %s %t %s'

Execute(Setting executable to 'pipenv' appends 'run mypy'):
  let g:ale_python_mypy_executable = 'path/to/pipenv'

  AssertLinter 'path/to/pipenv',
  \ ale#path#BufferCdString(bufnr(''))
  \   . ale#Escape('path/to/pipenv') . ' run mypy'
  \   . ' --show-column-numbers  --shadow-file %s %t %s'

Execute(Pipenv is detected when python_mypy_auto_pipenv is set):
  let g:ale_python_mypy_auto_pipenv = 1
  call ale#test#SetFilename('/testplugin/test/python_fixtures/pipenv/whatever.py')

  AssertLinter 'pipenv',
  \ ale#path#BufferCdString(bufnr(''))
  \   . ale#Escape('pipenv') . ' run mypy --show-column-numbers  --shadow-file %s %t %s'
