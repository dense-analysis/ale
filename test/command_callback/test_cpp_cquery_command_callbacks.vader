" Author: Ben Falconer <ben@falconers.me.uk>
" Description: A language server for C++

Before:
  call ale#assert#SetUpLinterTest('cpp', 'cquery')

After:
  call ale#assert#TearDownLinterTest()

Execute(The project root should be detected correctly using compile_commands.json file):
  call ale#test#SetFilename(tempname() . '/dummy.cpp')

  AssertLSPProject ''

  call ale#test#SetFilename('cquery_paths/dummy.cpp')

  AssertLSPProject ale#path#Simplify(g:dir . '/cquery_paths')

Execute(The project root should be detected correctly using .cquery file):
  call ale#test#SetFilename(tempname() . '/dummy.cpp')

  AssertLSPProject ''

  call ale#test#SetFilename('cquery_paths/with_cquery/dummy.cpp')

  AssertLSPProject ale#path#Simplify(g:dir . '/cquery_paths/with_cquery')

Execute(The executable should be configurable):
  AssertLinter 'cquery', ale#Escape('cquery')

  let b:ale_cpp_cquery_executable = 'foobar'

  AssertLinter 'foobar', ale#Escape('foobar')

Execute(The cache directory should be configurable):
  AssertLSPOptions {'cacheDirectory': expand('$HOME/.cache/cquery')}

  let b:ale_cpp_cquery_cache_directory = '/foo/bar'

  AssertLSPOptions {'cacheDirectory': '/foo/bar'}
