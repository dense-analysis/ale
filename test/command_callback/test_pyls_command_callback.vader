Before:
  call ale#assert#SetUpLinterTest('python', 'pyls')

  let b:bin_dir = has('win32') ? 'Scripts' : 'bin'

After:
  unlet! b:bin_dir
  unlet! b:executable

  call ale#assert#TearDownLinterTest()

Execute(The pyls command callback should return default string):
  AssertLinter 'pyls', ale#Escape('pyls')

Execute(The pyls executable should be configurable):
  let g:ale_python_pyls_executable = '~/.local/bin/pyls'

  AssertLinter '~/.local/bin/pyls' , ale#Escape('~/.local/bin/pyls')

Execute(The pyls executable should be run from the virtualenv path):
  call ale#test#SetFilename('python_paths/with_virtualenv/subdir/foo/bar.py')

  let b:executable = ale#path#Simplify(
  \ g:dir . '/python_paths/with_virtualenv/env/' . b:bin_dir . '/pyls'
  \)

  AssertEqual ale#Escape(b:executable),
  \ ale_linters#python#pyls#GetCommand(bufnr(''))

Execute(You should be able to override the pyls virtualenv lookup):
  call ale#test#SetFilename('python_paths/with_virtualenv/subdir/foo/bar.py')

  let g:ale_python_pyls_use_global = 1

  AssertLinter 'pyls', ale#Escape('pyls')

Execute(Setting executable to 'pipenv' appends 'run pyls'):
  let g:ale_python_pyls_executable = 'path/to/pipenv'

  AssertLinter 'path/to/pipenv', ale#Escape('path/to/pipenv') . ' run pyls'
