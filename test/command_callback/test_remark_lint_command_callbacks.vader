Before:
  Save g:ale_remark_lint_executable
  Save g:ale_remark_lint_use_global
  Save g:ale_remark_lint_options

  unlet! g:ale_remark_lint_executable
  unlet! b:ale_remark_lint_executable
  unlet! g:ale_remark_lint_use_global
  unlet! b:ale_remark_lint_use_global
  unlet! g:ale_remark_lint_options
  unlet! b:ale_remark_lint_options

  runtime autoload/ale/handlers/remark_lint.vim

  call ale#test#SetDirectory('/testplugin/test/command_callback')

After:
  Restore

  unlet! b:command_tail
  unlet! b:ale_remark_lint_executable
  unlet! b:ale_remark_lint_use_global
  unlet! b:ale_remark_lint_options

  call ale#test#RestoreDirectory()
  call ale#linter#Reset()

Execute(The executable should be configurable):
  AssertEqual 'remark', ale#handlers#remark_lint#GetExecutable(bufnr(''))

  let b:ale_remark_lint_executable = 'foobar'

  AssertEqual 'foobar', ale#handlers#remark_lint#GetExecutable(bufnr(''))

Execute(The executable should be used in the command):
  AssertEqual
  \ ale#Escape('remark') . ' --no-stdout --no-color',
  \ ale#handlers#remark_lint#GetCommand(bufnr(''))

  let b:ale_remark_lint_executable = 'foobar'

  AssertEqual
  \ ale#Escape('foobar') . ' --no-stdout --no-color',
  \ ale#handlers#remark_lint#GetCommand(bufnr(''))
  \

Execute(The options should be configurable):
  let b:ale_remark_lint_options = '--something'

  AssertEqual
  \ ale#Escape('remark') . ' --something --no-stdout --no-color',
  \ ale#handlers#remark_lint#GetCommand(bufnr(''))

Execute(The local executable from .bin should be used if available):
  call ale#test#SetFilename('remark_lint_paths/with_bin_path/foo.md')

  AssertEqual
  \ ale#path#Simplify(g:dir . '/remark_lint_paths/with_bin_path/node_modules/.bin/remark'),
  \ ale#handlers#remark_lint#GetExecutable(bufnr(''))

  AssertEqual
  \ ale#Escape(ale#path#Simplify(g:dir . '/remark_lint_paths/with_bin_path/node_modules/.bin/remark'))
  \   . ' --no-stdout --no-color',
  \ ale#handlers#remark_lint#GetCommand(bufnr(''))
