Before:
  Save g:ale_set_loclist
  Save g:ale_set_quickfix
  Save g:ale_buffer_info
  Save g:ale_set_lists_synchronously

  let g:ale_buffer_info = {}
  let g:ale_set_loclist = 0
  let g:ale_set_quickfix = 0
  let g:ale_set_lists_synchronously = 1

  call ale#test#SetDirectory('/testplugin/test')

After:
  Restore

  call setloclist(0, [])
  call setqflist([])

  call ale#test#RestoreDirectory()

Execute(The multiline text should be expanded in loclist):
  let g:ale_set_loclist = 1

  call ale#list#SetLists(bufnr(''), [
  \ {'bufnr': bufnr(''), 'lnum': 1, 'text': ['1-1', '1-2', '1-3']},
  \ {'bufnr': bufnr(''), 'lnum': 2, 'text': '2-1'},
  \])

  AssertEqual [
  \ {'bufnr': bufnr(''), 'lnum': 1, 'col': 0, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'text': '1-1'},
  \ {'bufnr': 0, 'lnum': 0, 'col': 0, 'valid': 0, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'text': '1-2'},
  \ {'bufnr': 0, 'lnum': 0, 'col': 0, 'valid': 0, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'text': '1-3'},
  \ {'bufnr': bufnr(''), 'lnum': 2, 'col': 0, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'text': '2-1'},
  \], ale#test#GetLoclistWithoutModule()

Execute(The multiline text should be expanded in quickfix):
  let g:ale_set_quickfix = 1

  let loclist = [
  \ {'bufnr': bufnr(''), 'lnum': 1, 'text': ['1-1', '1-2', '1-3']},
  \ {'bufnr': bufnr(''), 'lnum': 2, 'text': '2-1'},
  \]

  let g:ale_buffer_info[bufnr('')] = {'loclist': loclist}

  call ale#list#SetLists(bufnr(''), loclist)

  AssertEqual [
  \ {'bufnr': bufnr(''), 'lnum': 1, 'col': 0, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'text': '1-1'},
  \ {'bufnr': 0, 'lnum': 0, 'col': 0, 'valid': 0, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'text': '1-2'},
  \ {'bufnr': 0, 'lnum': 0, 'col': 0, 'valid': 0, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'text': '1-3'},
  \ {'bufnr': bufnr(''), 'lnum': 2, 'col': 0, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'text': '2-1'},
  \], ale#test#GetQflistWithoutModule()
