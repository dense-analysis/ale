===============================================================================
ALE Markdown Integration                                 *ale-markdown-options*


===============================================================================
cspell                                                    *ale-markdown-cspell*

See |ale-cspell-options|


===============================================================================
dprint                                                    *ale-markdown-dprint*

See |ale-dprint-options| and https://dprint.dev/plugins/markdown


===============================================================================
markdownlint                                        *ale-markdown-markdownlint*

g:ale_markdown_markdownlint_executable *g:ale_markdown_markdownlint_executable*
                                       *b:ale_markdown_markdownlint_executable*
  Type: |String|
  Default: `'markdownlint'`

  Override the invoked `markdownlint` binary. You can use other binaries such as
  `markdownlint-cli2`.


g:ale_markdown_markdownlint_options       *g:ale_markdown_markdownlint_options*
                                          *b:ale_markdown_markdownlint_options*
  Type: |String|
  Default: `''`

  This variable can be set to pass additional options to markdownlint.


===============================================================================
marksman                                                *ale-markdown-marksman*

g:ale_markdown_marksman_executable         *g:ale_markdown_marksman_executable*
                                           *b:ale_markdown_marksman_executable*
  Type: |String|
  Default: `'marksman'`

  Override the invoked `marksman` binary.


===============================================================================
mdl                                                          *ale-markdown-mdl*

g:ale_markdown_mdl_executable                   *g:ale_markdown_mdl_executable*
                                                *b:ale_markdown_mdl_executable*
  Type: |String|
  Default: `'mdl'`

  Override the invoked mdl binary. This is useful for running mdl from
  binstubs or a bundle.


g:ale_markdown_mdl_options                         *g:ale_markdown_mdl_options*
                                                   *b:ale_markdown_mdl_options*
  Type: |String|
  Default: `''`

  This variable can be set to pass additional options to mdl.


===============================================================================
pandoc                                                    *ale-markdown-pandoc*

g:ale_markdown_pandoc_executable             *g:ale_markdown_pandoc_executable*
                                             *b:ale_markdown_pandoc_executable*
  Type: |String|
  Default: `'pandoc'`

  This variable can be set to specify where to find the pandoc executable


g:ale_markdown_pandoc_options                   *g:ale_markdown_pandoc_options*
                                                *b:ale_markdown_pandoc_options*
  Type: |String|
  Default: `'-f gfm -t gfm -s -'`

  This variable can be set to change the default options passed to pandoc

===============================================================================
prettier                                                *ale-markdown-prettier*

See |ale-javascript-prettier| for information about the available options.


===============================================================================
pymarkdown                                            *ale-markdown-pymarkdown*

g:ale_markdown_pymarkdown_executable       *g:ale_markdown_pymarkdown_executable*
                                          *b:ale_markdown_pymarkdown_executable*
  Type: |String|
  Default: `'pymarkdown'`

  See |ale-integrations-local-executables|

  Set this to `'pipenv'` to invoke `'pipenv` `run` `pymarkdown'`.
  Set this to `'poetry'` to invoke `'poetry` `run` `pymarkdown'`.


g:ale_markdown_pymarkdown_options             *g:ale_markdown_pymarkdown_options*
                                             *b:ale_markdown_pymarkdown_options*
  Type: |String|
  Default: `''`

  This variable can be changed to add command-line arguments to the
  pymarkdown invocation.


g:ale_markdown_pymarkdown_use_global       *g:ale_markdown_pymarkdown_use_global*
                                          *b:ale_markdown_pymarkdown_use_global*
  Type: |Number|
  Default: `get(g:, 'ale_use_global_executables', 0)`

  See |ale-integrations-local-executables|


g:ale_markdown_pymarkdown_auto_pipenv     *g:ale_markdown_pymarkdown_auto_pipenv*
                                         *b:ale_markdown_pymarkdown_auto_pipenv*
  Type: |Number|
  Default: `0`

  Detect whether the file is inside a pipenv, and set the executable to `pipenv`
  if true. This is overridden by a manually-set executable.


g:ale_markdown_pymarkdown_auto_poetry     *g:ale_markdown_pymarkdown_auto_poetry*
                                         *b:ale_markdown_pymarkdown_auto_poetry*
  Type: |Number|
  Default: `0`

  Detect whether the file is inside a poetry, and set the executable to `poetry`
  if true. This is overridden by a manually-set executable.


g:ale_markdown_pymarkdown_auto_uv             *g:ale_markdown_pymarkdown_auto_uv*
                                             *b:ale_markdown_pymarkdown_auto_uv*
  Type: |Number|
  Default: `0`

  Set the executable to `uv` if true. This is overridden by a manually-set
  executable.


===============================================================================
remark-lint                                          *ale-markdown-remark-lint*

g:ale_markdown_remark_lint_executable   *g:ale_markdown_remark_lint_executable*
                                        *b:ale_markdown_remark_lint_executable*
  Type: |String|
  Default: `'remark'`

  See |ale-integrations-local-executables|


g:ale_markdown_remark_lint_options         *g:ale_markdown_remark_lint_options*
                                           *b:ale_markdown_remark_lint_options*
  Type: |String|
  Default: `''`

  This variable can be set to pass additional options to remark-lint.


g:ale_markdown_remark_lint_use_global   *g:ale_markdown_remark_lint_use_global*
                                        *b:ale_markdown_remark_lint_use_global*
  Type: |Number|
  Default: `get(g:, 'ale_use_global_executables', 0)`

  See |ale-integrations-local-executables|


===============================================================================
textlint                                                *ale-markdown-textlint*

See |ale-text-textlint|


===============================================================================
write-good                                            *ale-markdown-write-good*

See |ale-write-good-options|


===============================================================================
  vim:tw=78:ts=2:sts=2:sw=2:ft=help:norl:
