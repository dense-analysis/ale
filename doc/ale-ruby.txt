===============================================================================
ALE Ruby Integration                                         *ale-ruby-options*


===============================================================================
brakeman                                                    *ale-ruby-brakeman*

                                         *ale-options.ruby_brakeman_executable*
                                               *g:ale_ruby_brakeman_executable*
                                               *b:ale_ruby_brakeman_executable*
ruby_brakeman_executable
g:ale_ruby_brakeman_executable
  Type: |String|
  Default: `'brakeman'`

  Override the invoked brakeman binary. Set this to `'bundle'` to invoke
  `'bundle` `exec` brakeman'.

                                            *ale-options.ruby_brakeman_options*
                                                  *g:ale_ruby_brakeman_options*
                                                  *b:ale_ruby_brakeman_options*
ruby_brakeman_options
g:ale_ruby_brakeman_options
  Type: |String|
  Default: `''`

  The contents of this variable will be passed through to brakeman.


===============================================================================
cspell                                                        *ale-ruby-cspell*

See |ale-cspell-options|


===============================================================================
debride                                                      *ale-ruby-debride*

                                          *ale-options.ruby_debride_executable*
                                                *g:ale_ruby_debride_executable*
                                                *b:ale_ruby_debride_executable*
ruby_debride_executable
g:ale_ruby_debride_executable
  Type: |String|
  Default: `'debride'`

  Override the invoked debride binary. Set this to `'bundle'` to invoke
  `'bundle` `exec` debride'.

                                             *ale-options.ruby_debride_options*
                                                   *g:ale_ruby_debride_options*
                                                   *b:ale_ruby_debride_options*
ruby_debride_options
g:ale_ruby_debride_options
  Type: |String|
  Default: `''`

  This variable can be changed to modify flags given to debride.


===============================================================================
packwerk                                                    *ale-ruby-packwerk*

                                         *ale-options.ruby_packwerk_executable*
                                               *g:ale_ruby_packwerk_executable*
                                               *b:ale_ruby_packwerk_executable*
ruby_packwerk_executable
g:ale_ruby_packwerk_executable
  Type: |String|
  Default: `'packwerk'`

  Override the invoked packwerk binary. Set this to `'bundle'` to invoke
  `'bundle` `exec` packwerk'.

                                            *ale-options.ruby_packwerk_options*
                                                  *g:ale_ruby_packwerk_options*
                                                  *b:ale_ruby_packwerk_options*
ruby_packwerk_options
g:ale_ruby_packwerk_options
  Type: |String|
  Default: `''`

  This variable can be changed to modify flags given to packwerk.


===============================================================================
prettier                                                    *ale-ruby-prettier*

See |ale-javascript-prettier| for information about the available options.


===============================================================================
rails_best_practices                            *ale-ruby-rails_best_practices*

                             *ale-options.ruby_rails_best_practices_executable*
                                   *g:ale_ruby_rails_best_practices_executable*
                                   *b:ale_ruby_rails_best_practices_executable*
ruby_rails_best_practices_executable
g:ale_ruby_rails_best_practices_executable
  Type: |String|
  Default: `'rails_best_practices'`

  Override the invoked rails_best_practices binary. Set this to `'bundle'` to
  invoke `'bundle` `exec` rails_best_practices'.


                                *ale-options.ruby_rails_best_practices_options*
                                      *g:ale_ruby_rails_best_practices_options*
                                      *b:ale_ruby_rails_best_practices_options*
ruby_rails_best_practices_options
g:ale_ruby_rails_best_practices_options
  Type: |String|
  Default: `''`

  The contents of this variable will be passed through to rails_best_practices.


===============================================================================
reek                                                            *ale-ruby-reek*

                                             *ale-options.ruby_reek_executable*
                                                   *g:ale_ruby_reek_executable*
                                                   *b:ale_ruby_reek_executable*
ruby_reek_executable
g:ale_ruby_reek_executable
  Type: |String|
  Default: `'reek'`

  Override the invoked reek binary. Set this to `'bundle'` to invoke
  `'bundle` `exec` reek'.

                                           *ale-options.ruby_reek_show_context*
                                                 *g:ale_ruby_reek_show_context*
                                                 *b:ale_ruby_reek_show_context*
ruby_reek_show_context
g:ale_ruby_reek_show_context
  Type: |Number|
  Default: `0`

  Controls whether context is included in the linter message. Defaults to off
  because context is usually obvious while viewing a file.

                                         *ale-options.ruby_reek_show_wiki_link*
                                               *g:ale_ruby_reek_show_wiki_link*
                                               *b:ale_ruby_reek_show_wiki_link*
ruby_reek_show_wiki_link
g:ale_ruby_reek_show_wiki_link
  Type: |Number|
  Default: `0`

  Controls whether linter messages contain a link to an explanatory wiki page
  for the type of code smell. Defaults to off to improve readability.


===============================================================================
rubocop                                                      *ale-ruby-rubocop*

                                          *ale-options.ruby_rubocop_executable*
                                                *g:ale_ruby_rubocop_executable*
                                                *b:ale_ruby_rubocop_executable*
ruby_rubocop_executable
g:ale_ruby_rubocop_executable
  Type: |String|
  Default: `'rubocop'`

  Override the invoked rubocop binary. Set this to `'bundle'` to invoke
  `'bundle` `exec` rubocop'.

                                             *ale-options.ruby_rubocop_options*
                                                   *g:ale_ruby_rubocop_options*
                                                   *b:ale_ruby_rubocop_options*
ruby_rubocop_options
g:ale_ruby_rubocop_options
  Type: |String|
  Default: `''`

  This variable can be changed to modify flags given to rubocop.

                                    *ale-options.ruby_rubocop_auto_correct_all*
                                          *g:ale_ruby_rubocop_auto_correct_all*
                                          *b:ale_ruby_rubocop_auto_correct_all*
ruby_rubocop_auto_correct_all
g:ale_ruby_rubocop_auto_correct_all
  Type: |Number|
  Default: `0`

  This variable can be changed to make rubocop to correct all offenses (unsafe).


===============================================================================
ruby                                                            *ale-ruby-ruby*

                                             *ale-options.ruby_ruby_executable*
                                                   *g:ale_ruby_ruby_executable*
                                                   *b:ale_ruby_ruby_executable*
ruby_ruby_executable
g:ale_ruby_ruby_executable
  Type: |String|
  Default: `'ruby'`

  This variable can be changed to use a different executable for ruby.


===============================================================================
rufo                                                            *ale-ruby-rufo*

                                             *ale-options.ruby_rufo_executable*
                                                   *g:ale_ruby_rufo_executable*
                                                   *b:ale_ruby_rufo_executable*
ruby_rufo_executable
g:ale_ruby_rufo_executable
  Type: |String|
  Default: `'rufo'`

  Override the invoked rufo binary. This is useful for running rufo from
  binstubs or a bundle.


===============================================================================
solargraph                                                *ale-ruby-solargraph*

                                       *ale-options.ruby_solargraph_executable*
                                             *g:ale_ruby_solargraph_executable*
                                             *b:ale_ruby_solargraph_executable*
ruby_solargraph_executable
g:ale_ruby_solargraph_executable
  Type: |String|
  Default: `'solargraph'`

  Override the invoked solargraph binary. This is useful for running solargraph
  from binstubs or a bundle.


===============================================================================
sorbet                                                        *ale-ruby-sorbet*

                                           *ale-options.ruby_sorbet_executable*
                                                 *g:ale_ruby_sorbet_executable*
                                                 *b:ale_ruby_sorbet_executable*
ruby_sorbet_executable
g:ale_ruby_sorbet_executable
  Type: |String|
  Default: `'srb'`

  Override the invoked sorbet binary. Set this to `'bundle'` to invoke
  `'bundle` `exec` srb'.

                                              *ale-options.ruby_sorbet_options*
                                                    *g:ale_ruby_sorbet_options*
                                                    *b:ale_ruby_sorbet_options*
ruby_sorbet_options
g:ale_ruby_sorbet_options
  Type: |String|
  Default: `''`

  This variable can be changed to modify flags given to sorbet.

                                      *ale-options.ruby_sorbet_enable_watchman*
                                            *g:ale_ruby_sorbet_enable_watchman*
                                            *b:ale_ruby_sorbet_enable_watchman*
ruby_sorbet_enable_watchman
g:ale_ruby_sorbet_enable_watchman
  Type: |Number|
  Default: `0`

  Whether or not to use watchman to let the LSP server to know about changes
  to files from outside of vim. Defaults to disable watchman because it
  requires watchman to be installed separately from sorbet.


===============================================================================
standardrb                                                *ale-ruby-standardrb*

                                       *ale-options.ruby_standardrb_executable*
                                             *g:ale_ruby_standardrb_executable*
                                             *b:ale_ruby_standardrb_executable*
ruby_standardrb_executable
g:ale_ruby_standardrb_executable
  Type: |String|
  Default: `'standardrb'`

  Override the invoked standardrb binary. Set this to `'bundle'` to invoke
  `'bundle` `exec` standardrb'.

                                          *ale-options.ruby_standardrb_options*
                                                *g:ale_ruby_standardrb_options*
                                                *b:ale_ruby_standardrb_options*
ruby_standardrb_options
g:ale_ruby_standardrb_options
  Type: |String|
  Default: `''`

  This variable can be changed to modify flags given to standardrb.


===============================================================================
syntax_tree                                              *ale-ruby-syntax_tree*

                                      *ale-options.ruby_syntax_tree_executable*
                                            *g:ale_ruby_syntax_tree_executable*
                                            *b:ale_ruby_syntax_tree_executable*
ruby_syntax_tree_executable
g:ale_ruby_syntax_tree_executable
  Type: |String|
  Default: `'stree'`

  Override the invoked SyntaxTree binary. Set this to `'bundle'` to invoke
  `'bundle` `exec` stree'.

                                         *ale-options.ruby_syntax_tree_options*
                                               *g:ale_ruby_syntax_tree_options*
                                               *b:ale_ruby_syntax_tree_options*
ruby_syntax_tree_options
g:ale_ruby_syntax_tree_options
  Type: |String|
  Default: `''`

  This variable can be changed to modify flags given to SyntaxTree.


===============================================================================
rubyfmt                                                       *ale-ruby-rubyfmt*

                                          *ale-options.ruby_rubyfmt_executable*
                                                *g:ale_ruby_rubyfmt_executable*
                                                 *b:ale_ruby_rubyfmt_executable*
ruby_rubyfmt_executable
g:ale_ruby_rubyfmt_executable
  Type: |String|
  Default: `'rubyfmt'`

  This option can be changed to change the path for `rubyfmt`.

                                             *ale-options.ruby_rubyfmt_options*
                                                   *g:ale_ruby_rubyfmt_options*
                                                    *b:ale_ruby_rubyfmt_options*
ruby_rubyfmt_options
g:ale_ruby_rubyfmt_options
  Type: |String|
  Default: `''`

  This option can be changed to pass extra options to `'rubyfmt'`.


===============================================================================
  vim:tw=78:ts=2:sts=2:sw=2:ft=help:norl:
