===============================================================================
ALE Haskell Integration                                   *ale-haskell-options*


===============================================================================
brittany                                                 *ale-haskell-brittany*

                                      *ale-options.haskell_brittany_executable*
                                            *g:ale_haskell_brittany_executable*
                                            *b:ale_haskell_brittany_executable*
haskell_brittany_executable
g:ale_haskell_brittany_executable
  Type: |String|
  Default: `'brittany'`

  This variable can be changed to use a different executable for brittany.


===============================================================================
cspell                                                     *ale-haskell-cspell*

See |ale-cspell-options|


===============================================================================
floskell                                                 *ale-haskell-floskell*

                                      *ale-options.haskell_floskell_executable*
                                            *g:ale_haskell_floskell_executable*
                                            *b:ale_haskell_floskell_executable*
haskell_floskell_executable
g:ale_haskell_floskell_executable
  Type: |String|
  Default: `'floskell'`

  This variable can be changed to use a different executable for floskell.


===============================================================================
ghc                                                           *ale-haskell-ghc*

                                              *ale-options.haskell_ghc_options*
                                                    *g:ale_haskell_ghc_options*
                                                    *b:ale_haskell_ghc_options*
haskell_ghc_options
g:ale_haskell_ghc_options
  Type: |String|
  Default: `'-fno-code -v0'`

  This variable can be changed to modify flags given to ghc.


===============================================================================
ghc-mod                                                   *ale-haskell-ghc-mod*

                                       *ale-options.haskell_ghc_mod_executable*
                                             *g:ale_haskell_ghc_mod_executable*
                                             *b:ale_haskell_ghc_mod_executable*
haskell_ghc_mod_executable
g:ale_haskell_ghc_mod_executable
  Type: |String|
  Default: `'ghc-mod'`

  This variable can be changed to use a different executable for ghc-mod.


===============================================================================
cabal-ghc                                               *ale-haskell-cabal-ghc*

                                        *ale-options.haskell_cabal_ghc_options*
                                              *g:ale_haskell_cabal_ghc_options*
                                              *b:ale_haskell_cabal_ghc_options*
haskell_cabal_ghc_options
g:ale_haskell_cabal_ghc_options
  Type: |String|
  Default: `'-fno-code -v0'`

  This variable can be changed to modify flags given to ghc through cabal
  exec.


===============================================================================
hdevtools                                               *ale-haskell-hdevtools*

                                     *ale-options.haskell_hdevtools_executable*
                                           *g:ale_haskell_hdevtools_executable*
                                           *b:ale_haskell_hdevtools_executable*
haskell_hdevtools_executable
g:ale_haskell_hdevtools_executable
  Type: |String|
  Default: `'hdevtools'`

  This variable can be changed to use a different executable for hdevtools.

                                        *ale-options.haskell_hdevtools_options*
                                              *g:ale_haskell_hdevtools_options*
                                              *b:ale_haskell_hdevtools_options*
haskell_hdevtools_options
g:ale_haskell_hdevtools_options
  Type: |String|
  Default: `get(g:, 'hdevtools_options', '-g -Wall')`

  This variable can be changed to modify flags given to hdevtools.

  The hdevtools documentation recommends setting GHC options for `hdevtools`
  with `g:hdevtools_options`. ALE will use the value of `g:hdevtools_options`
  for the value of `g:ale_haskell_hdevtools_options` by default, so this
  option can be respected and overridden specifically for ALE.


===============================================================================
hfmt                                                         *ale-haskell-hfmt*

                                          *ale-options.haskell_hfmt_executable*
                                                *g:ale_haskell_hfmt_executable*
                                                *b:ale_haskell_hfmt_executable*
haskell_hfmt_executable
g:ale_haskell_hfmt_executable
  Type: |String|
  Default: `'hfmt'`

  This variable can be changed to use a different executable for hfmt.


===============================================================================
hindent                                                   *ale-haskell-hindent*

                                       *ale-options.haskell_hindent_executable*
                                             *g:ale_haskell_hindent_executable*
                                             *b:ale_haskell_hindent_executable*
haskell_hindent_executable
g:ale_haskell_hindent_executable
  Type: |String|
  Default: `'hindent'`

  This variable can be changed to use a different executable for hindent.


===============================================================================
hlint                                                       *ale-haskell-hlint*

                                         *ale-options.haskell_hlint_executable*
                                               *g:ale_haskell_hlint_executable*
                                               *b:ale_haskell_hlint_executable*
haskell_hlint_executable
g:ale_haskell_hlint_executable
  Type: |String|
  Default: `'hlint'`

  This variable can be changed to use a different executable for hlint.

                                            *ale-options.haskell_hlint_options*
                                                  *g:ale_haskell_hlint_options*
                                                  *b:ale_haskell_hlint_options*
haskell_hlint_options
g:ale_haskell_hlint_options
  Type: |String|
  Default: `''`

  This variable can be used to pass extra options to the underlying hlint
  executable.


===============================================================================
hls                                                           *ale-haskell-hls*

                                           *ale-options.haskell_hls_executable*
                                                 *g:ale_haskell_hls_executable*
                                                 *b:ale_haskell_hls_executable*
haskell_hls_executable
g:ale_haskell_hls_executable
  Type: |String|
  Default: `'haskell-language-server-wrapper'`

  This variable can be changed to use a different executable for the haskell
  language server.

                                               *ale-options.haskell_hls_config*
                                                     *g:ale_haskell_hls_config*
                                                     *b:ale_haskell_hls_config*
haskell_hls_config
g:ale_haskell_hls_config
  Type: |Dictionary|
  Default: `{}`

  Dictionary with configuration settings for HLS. For example, to see more
  completions:
>
  let g:ale_haskell_hls_config = {'haskell': {'maxCompletions': 250}}
<
  Refer to HLS documentation for possible settings:
  https://haskell-language-server.readthedocs.io/en/latest/configuration.html#language-specific-server-options


===============================================================================
stack-build                                           *ale-haskell-stack-build*

                                      *ale-options.haskell_stack_build_options*
                                            *g:ale_haskell_stack_build_options*
                                            *b:ale_haskell_stack_build_options*
haskell_stack_build_options
g:ale_haskell_stack_build_options
  Type: |String|
  Default: `'--fast'`

  We default to using `'--fast'`. Since Stack generates binaries, your
  programs will be slower unless you separately rebuild them outside of ALE.


===============================================================================
stack-ghc                                               *ale-haskell-stack-ghc*

                                        *ale-options.haskell_stack_ghc_options*
                                              *g:ale_haskell_stack_ghc_options*
                                              *b:ale_haskell_stack_ghc_options*
haskell_stack_ghc_options
g:ale_haskell_stack_ghc_options
  Type: |String|
  Default: `'-fno-code -v0'`

  This variable can be changed to modify flags given to ghc through `stack
  ghc`


===============================================================================
stylish-haskell                                   *ale-haskell-stylish-haskell*

                               *ale-options.haskell_stylish_haskell_executable*
                                     *g:ale_haskell_stylish_haskell_executable*
                                     *b:ale_haskell_stylish_haskell_executable*
haskell_stylish_haskell_executable
g:ale_haskell_stylish_haskell_executable
  Type: |String|
  Default: `'stylish-haskell'`

  This variable can be changed to use a different executable for stylish-haskell.


===============================================================================
hie                                                           *ale-haskell-hie*

                                           *ale-options.haskell_hie_executable*
                                                 *g:ale_haskell_hie_executable*
                                                 *b:ale_haskell_hie_executable*
haskell_hie_executable
g:ale_haskell_hie_executable
  Type: |String|
  Default: `'hie'`

  This variable can be changed to use a different executable for the haskell
  ide engine. i.e. `'hie-wrapper'`


===============================================================================
ormolu                                                     *ale-haskell-ormolu*

                                        *ale-options.haskell_ormolu_executable*
                                              *g:ale_haskell_ormolu_executable*
                                              *b:ale_haskell_ormolu_executable*
haskell_ormolu_executable
g:ale_haskell_ormolu_executable
  Type: |String|
  Default: `'ormolu'`

  This variable can be changed to use a different executable for ormolu.

                                           *ale-options.haskell_ormolu_options*
                                                 *g:ale_haskell_ormolu_options*
                                                 *b:ale_haskell_ormolu_options*
haskell_ormolu_options
g:ale_haskell_ormolu_options
  Type: |String|
  Default: `''`

  This variable can be used to pass extra options to the underlying ormolu
  executable.


===============================================================================
fourmolu                                                 *ale-haskell-fourmolu*

                                      *ale-options.haskell_fourmolu_executable*
                                            *g:ale_haskell_fourmolu_executable*
                                            *b:ale_haskell_fourmolu_executable*
haskell_fourmolu_executable
g:ale_haskell_fourmolu_executable
  Type: |String|
  Default: `'fourmolu'`

  This variable can be changed to use a different executable for fourmolu.

                                         *ale-options.haskell_fourmolu_options*
                                               *g:ale_haskell_fourmolu_options*
                                               *b:ale_haskell_fourmolu_options*
haskell_fourmolu_options
g:ale_haskell_fourmolu_options
  Type: |String|
  Default: `''`

  This variable can be used to pass extra options to the underlying fourmolu
  executable.


===============================================================================
  vim:tw=78:ts=2:sts=2:sw=2:ft=help:norl:
