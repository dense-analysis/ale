===============================================================================
ALE TypeScript Integration                             *ale-typescript-options*


===============================================================================
eslint                                                  *ale-typescript-eslint*

Becauase of how TypeScript compiles code to JavaScript and how interrelated
the two languages are, the `eslint` linter for TypeScript uses the JavaScript
options for `eslint` too. See: |ale-javascript-eslint|.


===============================================================================
tslint                                                  *ale-typescript-tslint*

g:ale_typescript_tslint_executable         *g:ale_typescript_tslint_executable*
                                           *b:ale_typescript_tslint_executable*
  Type: |String|
  Default: `'tslint'`

  See |ale-integrations-local-executables|


g:ale_typescript_tslint_config_path       *g:ale_typescript_tslint_config_path*
                                          *b:ale_typescript_tslint_config_path*
  Type: |String|
  Default: `''`

  ALE will first discover the tslint.json path in an ancestor directory. If no
  such path exists, this variable will be used instead.


g:ale_typescript_tslint_use_global         *g:ale_typescript_tslint_use_global*
                                           *b:ale_typescript_tslint_use_global*
  Type: |Number|
  Default: `0`

  See |ale-integrations-local-executables|


===============================================================================
tsserver                                              *ale-typescript-tsserver*

g:ale_typescript_tsserver_executable     *g:ale_typescript_tsserver_executable*
                                         *b:ale_typescript_tsserver_executable*
  Type: |String|
  Default: `'tsserver'`

  ALE will first discover the tsserver path in an ancestor node_modules
  directory. If no such path exists, this variable will be used instead.

  If you wish to use only a globally installed version of tsserver, set
  |g:ale_typescript_tsserver_use_global| to `1`.


g:ale_typescript_tsserver_config_path   *g:ale_typescript_tsserver_config_path*
                                        *b:ale_typescript_tsserver_config_path*
  Type: |String|
  Default: `''`

  ALE will first discover the tsserver.json path in an ancestor directory. If
  no such path exists, this variable will be used instead.


g:ale_typescript_tsserver_use_global     *g:ale_typescript_tsserver_use_global*
                                         *b:ale_typescript_tsserver_use_global*
  Type: |Number|
  Default: `0`

  This variable controls whether or not ALE will search for a local path for
  tsserver first. If this variable is set to `1`, then ALE will always use the
  global version of tsserver, in preference to locally installed versions of
  tsserver in node_modules.


===============================================================================
  vim:tw=78:ts=2:sts=2:sw=2:ft=help:norl:
