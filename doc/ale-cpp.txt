===============================================================================
ALE C++ Integration                                           *ale-cpp-options*


-------------------------------------------------------------------------------
clang                                                           *ale-cpp-clang*

g:ale_cpp_clang_options                               *g:ale_cpp_clang_options*
                                                      *b:ale_cpp_clang_options*
  Type: |String|
  Default: `'-std=c++14 -Wall'`

  This variable can be changed to modify flags given to clang.


-------------------------------------------------------------------------------
clangtidy                                                   *ale-cpp-clangtidy*

`clang-tidy` will be run only when files are saved to disk, so that
`compile_commands.json` files can be used. It is recommended to use this
linter in combination with `compile_commands.json` files.


g:ale_cpp_clangtidy_checks                         *g:ale_cpp_clangtidy_checks*
                                                   *b:ale_cpp_clangtidy_checks*
  Type: |List|
  Default: `['*']`

  The checks to enable for clang-tidy with the `-checks` argument.

  All options will be joined with commas, and escaped appropriately for
  the shell. The `-checks` flag can be removed entirely by setting this
  option to an empty List.


g:ale_cpp_clangtidy_options                       *g:ale_cpp_clangtidy_options*
                                                  *b:ale_cpp_clangtidy_options*
  Type: |String|
  Default: `''`

  This variable can be changed to modify flags given to clang-tidy.

  Setting this variable to a non-empty string will cause the `--` argument
  to be passed to `clang-tidy`, which will mean that detection of
  `compile_commands.json` files for compile command databases will be
  disabled. Only set this option if you want to control compiler flags
  entirely manually.


-------------------------------------------------------------------------------
cppcheck                                                     *ale-cpp-cppcheck*

g:ale_cpp_cppcheck_options                         *g:ale_cpp_cppcheck_options*
                                                   *b:ale_cpp_cppcheck_options*
  Type: |String|
  Default: `'--enable=style'`

  This variable can be changed to modify flags given to cppcheck.


-------------------------------------------------------------------------------
gcc                                                               *ale-cpp-gcc*

g:ale_cpp_gcc_options                                   *g:ale_cpp_gcc_options*
                                                        *b:ale_cpp_gcc_options*
  Type: |String|
  Default: `'-std=c++14 -Wall'`

  This variable can be changed to modify flags given to gcc.


-------------------------------------------------------------------------------
cpplint                                                       *ale-cpp-cpplint*
g:ale_cpp_cpplint_filter                             *g:ale_cpp_cpplint_filter*
                                                     *b:ale_cpp_cpplint_filter*
  Type: |Array|
  Default: `[]`

  This variable can be set to change the filter option of cpplint. All filters
  can be seen in _ERROR_CATEGORIES of a source code.
  https://github.com/google/styleguide/blob/gh-pages/cpplint/cpplint.py

  "-FOO" and "FOO" means "do not print categories that start with FOO".
  "+FOO" means "do print categories that start with FOO".


g:ale_cpp_cpplint_verbose                           *g:ale_cpp_cpplint_verbose*
                                                    *b:ale_cpp_cpplint_verbose*
  Type: |Number|
  Default: `1`

  This variable can be set to change the verbose option of cpplint. The large
  number, the less a printed message.

  Specify a number 0-5 to restrict errors to certain verbosity levels.


g:ale_cpp_cpplint_linelength                     *g:ale_cpp_cpplint_linelength*
                                                 *b:ale_cpp_cpplint_linelength*
  Type: |Number| 
  Default: `80`

  This variable can be set to change the linelength option of cpplint.
  This is the allowed line length for the project.

-------------------------------------------------------------------------------
  vim:tw=78:ts=2:sts=2:sw=2:ft=help:norl:
